project-root/
PROJECT_TODO.md/
├── PROJECT_TODO.md                   # (документация)
game/
├── __init__.py                   # (нет описания)
├── config.py                   # Основные настройки игры.
├── game_manager.py                   # Менеджер игрового состояния.
├── logging_config.py                   # Настройка логирования.
├── protocols.py                   # Протоколы, определяющие интерфейсы для различных компонен...
├── results.py                   # (нет описания)
├── actions
    ├── action.py                   # Модуль определяет абстрактный базовый класс для всех дейс...
    ├── basic_attack.py                   # Модуль реализует действие базовой атаки персонажа.
├── core
    ├── context.py                   # Игровой контекст - центральный хаб для всех сервисов.
├── data
    ├── character_loader.py                   # Загрузчик данных персонажей из JSON файлов.
        ├── monster_classes
            ├── goblin.json                   # (JSON конфигурация)
            ├── orc.json                   # (JSON конфигурация)
            ├── skeleton.json                   # (JSON конфигурация)
            ├── troll.json                   # (JSON конфигурация)
            ├── wizard.json                   # (JSON конфигурация)
        ├── player_classes
            ├── archer.json                   # (JSON конфигурация)
            ├── berserker.json                   # (JSON конфигурация)
            ├── healer.json                   # (JSON конфигурация)
            ├── mage.json                   # (JSON конфигурация)
            ├── rogue.json                   # (JSON конфигурация)
    ├── damage
        ├── damage_types.json                   # (JSON конфигурация)
    ├── names
        ├── adjectives.json                   # (JSON конфигурация)
        ├── nouns.json                   # (JSON конфигурация)
        ├── prefixes.json                   # (JSON конфигурация)
        ├── suffixes.json                   # (JSON конфигурация)
├── entities
    ├── character.py                   # Базовый класс персонажа в игре.
    ├── monster.py                   # Класс монстра (персонажа, не управляемого игроком).
    ├── player.py                   # Класс игрока (персонажа, управляемого игроком).
    ├── properties
        ├── base.py                   # Базовые классы для свойств.
        ├── combat.py                   # Свойство боевых показателей персонажа.
        ├── context.py                   # Реализация PropertyContext для свойств, использующая Game...
        ├── energy.py                   # Свойство энергии персонажа.
        ├── experience.py                   # Свойство опыта персонажа.
        ├── health.py                   # Свойство здоровья персонажа.
        ├── level.py                   # Свойство уровня персонажа.
        ├── stats.py                   # Свойство характеристик персонажа.
        ├── stats_config.py                   # Модуль свойства конфигурации характеристик персонажа.
├── events
    ├── __init__.py                   # (нет описания)
    ├── battle_events.py                   # Модуль событий, связанных с боем.
    ├── character.py                   # События, связанные с персонажами.
    ├── combat.py                   # События, связанные с боевой системой.
    ├── event.py                   # Шина событий игры.
    ├── render_data.py                   # Данные для визуального отображения событий в текстовом ин...
├── factories
    ├── __init__.py                   # (нет описания)
    ├── character_property_factory.py                   # Фабрика для создания и связывания всех свойств персонажа.
    ├── monster_factory.py                   # Фабрика для создания персонажей-игроков.
    ├── monster_property_factory.py                   # Фабрика для создания и связывания всех свойств монстра.
    ├── player_factory.py                   # Фабрика для создания персонажей-игроков.
    ├── player_property_factory.py                   # Фабрика для создания и связывания всех свойств персонажа.
├── mixins
    ├── __init__.py                   # Централизованные миксины для всего проекта.
    ├── logging_mixin.py                   # Миксин для добавления логирования в классы.
    ├── ui_mixin.py                   # Миксины для UI функциональности.
├── naming
    ├── template_namer.py                   # Генератор имен монстров на основе шаблонов.
├── systems
    ├── battle_manager.py                   # Менеджер боя для автоматического пошагового сражения.
    ├── battle_round.py                   # Модуль, содержащий класс для управления отдельным раундом...
    ├── event_bus.py                   # Система шины событий (Event Bus) для обмена сообщениями м...
    ├── damage
        ├── damage_system.py                   # (нет описания)
        ├── damage_type.py                   # Модуль определения типов урона в игре. Использует Enum дл...
        ├── resistance_system.py                   # (нет описания)
├── ui
    ├── __init__.py                   # Пакет пользовательского интерфейса игры. Содержит все ком...
    ├── base_screen.py                   # (нет описания)
    ├── battle_screen.py                   # Экран боя. Отображает боевую сцену с возможностью взаимод...
    ├── inventory_screen.py                   # Экран инвентаря. Отображает содержимое инвентаря игрока.
    ├── main_screen.py                   # Главный экран игры. Отображает главное меню с возможность...
    ├── screen_manager.py                   # Управление экранами игры. Реализует паттерн Состояние для...
    ├── command_system
        ├── __init__.py                   # Система команд пользовательского интерфейса. Содержит сам...
        ├── command.py                   # Базовые классы для системы команд. Реализует паттерн Кома...
        ├── command_renderer.py                   # Отрисовка команд пользовательского интерфейса. Отдельный ...
        ├── screen_command_registry.py                   # Реестр команд для экранов. Реализует паттерн Registry для...
    ├── commands
        ├── __init__.py                   # Пакет конкретных команд для разных экранов. Содержит реал...
        ├── battle_commands.py                   # Специфические команды для экрана боя.
        ├── common_commands.py                   # Общие команды, которые могут использоваться в нескольких ...
        ├── inventory_commands.py                   # Специфические команды для экрана инвентаря.
        ├── main_screen_commands.py                   # Специфические команды для главного экрана.
    ├── components
        ├── battle_components.py                   # Компоненты для экрана боя. Содержит визуальные элементы д...
    ├── controllers
        ├── battle_log_controller.py                   # Контроллер для управления логом боя и обработки событий. ...
    ├── rendering
        ├── __init__.py                   # Модуль рендеринга пользовательского интерфейса. Содержит ...
        ├── color_manager.py                   # Управление цветами для пользовательского интерфейса. Пред...
        ├── renderable.py                   # Базовые элементы пользовательского интерфейса. Содержит а...
        ├── renderer.py                   # Рендерер для отрисовки элементов пользовательского интерф...
        ├── template_renderer.py                   # Рендерер для работы с шаблонами текста. Позволяет создава...
    ├── widgets
        ├── __init__.py                   # Переиспользуемые UI компоненты.
        ├── bars.py                   # Прогресс-бары для отображения различных параметров (HP, E...
        ├── character_card.py                   # Виджет для отображения сводной информации о персонаже. Со...
        ├── labels.py                   # Базовые текстовые метки для отображения информации. Эти к...
guide/
├── style_guide.md                   # (документация)
├── tree.md                   # (документация)
main.py/
├── main.py                   # Главная точка входа в игру.
tests/
├── __init__.py                   # (нет описания)
├── test_character.py                   # Базовые тесты для класса Character.
├── test_command_system.py                   # Тесты для системы команд.
├── test_game_manager.py                   # Тесты для модуля game.game_manager, включая класс GameMan...
├── test_template_namer.py                   # Тесты для генератора имен монстров.
└── test_ui
    ├── test_base_screen.py                   # Тесты для game/ui/base_screen.py
    └── test_widgets.py                   # Тесты для UI виджетов.